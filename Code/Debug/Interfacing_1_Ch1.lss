
Interfacing_1_Ch1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000016e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000002  00800060  00800060  000001e2  2**0
                  ALLOC
  2 .stab         00000474  00000000  00000000  000001e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000088a  00000000  00000000  00000658  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a2 36       	cpi	r26, 0x62	; 98
  6c:	b1 07       	cpc	r27, r17
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 99 00 	call	0x132	; 0x132 <main>
  74:	0c 94 b5 00 	jmp	0x16a	; 0x16a <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <timer0_config>:
#define second 122
unsigned char tick=0;
unsigned char current=0;

void timer0_config (void)
{
  7c:	df 93       	push	r29
  7e:	cf 93       	push	r28
  80:	cd b7       	in	r28, 0x3d	; 61
  82:	de b7       	in	r29, 0x3e	; 62

	TCCR0 |= (1<<FOC0) | (1<<CS02) ;
  84:	a3 e5       	ldi	r26, 0x53	; 83
  86:	b0 e0       	ldi	r27, 0x00	; 0
  88:	e3 e5       	ldi	r30, 0x53	; 83
  8a:	f0 e0       	ldi	r31, 0x00	; 0
  8c:	80 81       	ld	r24, Z
  8e:	84 68       	ori	r24, 0x84	; 132
  90:	8c 93       	st	X, r24
	TCNT0 = 0;
  92:	e2 e5       	ldi	r30, 0x52	; 82
  94:	f0 e0       	ldi	r31, 0x00	; 0
  96:	10 82       	st	Z, r1
	TIMSK |= (1<<TOIE0);
  98:	a9 e5       	ldi	r26, 0x59	; 89
  9a:	b0 e0       	ldi	r27, 0x00	; 0
  9c:	e9 e5       	ldi	r30, 0x59	; 89
  9e:	f0 e0       	ldi	r31, 0x00	; 0
  a0:	80 81       	ld	r24, Z
  a2:	81 60       	ori	r24, 0x01	; 1
  a4:	8c 93       	st	X, r24
}
  a6:	cf 91       	pop	r28
  a8:	df 91       	pop	r29
  aa:	08 95       	ret

000000ac <TIMER0_0VF_vect>:

ISR (TIMER0_0VF_vect)
{
  ac:	1f 92       	push	r1
  ae:	0f 92       	push	r0
  b0:	0f b6       	in	r0, 0x3f	; 63
  b2:	0f 92       	push	r0
  b4:	11 24       	eor	r1, r1
  b6:	8f 93       	push	r24
  b8:	9f 93       	push	r25
  ba:	af 93       	push	r26
  bc:	bf 93       	push	r27
  be:	ef 93       	push	r30
  c0:	ff 93       	push	r31
  c2:	df 93       	push	r29
  c4:	cf 93       	push	r28
  c6:	cd b7       	in	r28, 0x3d	; 61
  c8:	de b7       	in	r29, 0x3e	; 62
	tick++;
  ca:	80 91 60 00 	lds	r24, 0x0060
  ce:	8f 5f       	subi	r24, 0xFF	; 255
  d0:	80 93 60 00 	sts	0x0060, r24
	if(tick == second)
  d4:	80 91 60 00 	lds	r24, 0x0060
  d8:	8a 37       	cpi	r24, 0x7A	; 122
  da:	f1 f4       	brne	.+60     	; 0x118 <TIMER0_0VF_vect+0x6c>
	{
		current++;
  dc:	80 91 61 00 	lds	r24, 0x0061
  e0:	8f 5f       	subi	r24, 0xFF	; 255
  e2:	80 93 61 00 	sts	0x0061, r24
		PORTC &= 0xF0;
  e6:	a5 e3       	ldi	r26, 0x35	; 53
  e8:	b0 e0       	ldi	r27, 0x00	; 0
  ea:	e5 e3       	ldi	r30, 0x35	; 53
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	80 81       	ld	r24, Z
  f0:	80 7f       	andi	r24, 0xF0	; 240
  f2:	8c 93       	st	X, r24
		PORTC = PORTC | current;
  f4:	a5 e3       	ldi	r26, 0x35	; 53
  f6:	b0 e0       	ldi	r27, 0x00	; 0
  f8:	e5 e3       	ldi	r30, 0x35	; 53
  fa:	f0 e0       	ldi	r31, 0x00	; 0
  fc:	90 81       	ld	r25, Z
  fe:	80 91 61 00 	lds	r24, 0x0061
 102:	89 2b       	or	r24, r25
 104:	8c 93       	st	X, r24
		if (current == 9)
 106:	80 91 61 00 	lds	r24, 0x0061
 10a:	89 30       	cpi	r24, 0x09	; 9
 10c:	19 f4       	brne	.+6      	; 0x114 <TIMER0_0VF_vect+0x68>
		{
			current = -1;
 10e:	8f ef       	ldi	r24, 0xFF	; 255
 110:	80 93 61 00 	sts	0x0061, r24
		}
		tick=0;
 114:	10 92 60 00 	sts	0x0060, r1
	}

}
 118:	cf 91       	pop	r28
 11a:	df 91       	pop	r29
 11c:	ff 91       	pop	r31
 11e:	ef 91       	pop	r30
 120:	bf 91       	pop	r27
 122:	af 91       	pop	r26
 124:	9f 91       	pop	r25
 126:	8f 91       	pop	r24
 128:	0f 90       	pop	r0
 12a:	0f be       	out	0x3f, r0	; 63
 12c:	0f 90       	pop	r0
 12e:	1f 90       	pop	r1
 130:	18 95       	reti

00000132 <main>:

int main (void)
{
 132:	df 93       	push	r29
 134:	cf 93       	push	r28
 136:	cd b7       	in	r28, 0x3d	; 61
 138:	de b7       	in	r29, 0x3e	; 62
	DDRC |= 0x0F;
 13a:	a4 e3       	ldi	r26, 0x34	; 52
 13c:	b0 e0       	ldi	r27, 0x00	; 0
 13e:	e4 e3       	ldi	r30, 0x34	; 52
 140:	f0 e0       	ldi	r31, 0x00	; 0
 142:	80 81       	ld	r24, Z
 144:	8f 60       	ori	r24, 0x0F	; 15
 146:	8c 93       	st	X, r24
	PORTC &= 0xF0;
 148:	a5 e3       	ldi	r26, 0x35	; 53
 14a:	b0 e0       	ldi	r27, 0x00	; 0
 14c:	e5 e3       	ldi	r30, 0x35	; 53
 14e:	f0 e0       	ldi	r31, 0x00	; 0
 150:	80 81       	ld	r24, Z
 152:	80 7f       	andi	r24, 0xF0	; 240
 154:	8c 93       	st	X, r24
	timer0_config();
 156:	0e 94 3e 00 	call	0x7c	; 0x7c <timer0_config>
	SREG |= (1<<7);
 15a:	af e5       	ldi	r26, 0x5F	; 95
 15c:	b0 e0       	ldi	r27, 0x00	; 0
 15e:	ef e5       	ldi	r30, 0x5F	; 95
 160:	f0 e0       	ldi	r31, 0x00	; 0
 162:	80 81       	ld	r24, Z
 164:	80 68       	ori	r24, 0x80	; 128
 166:	8c 93       	st	X, r24
 168:	ff cf       	rjmp	.-2      	; 0x168 <main+0x36>

0000016a <_exit>:
 16a:	f8 94       	cli

0000016c <__stop_program>:
 16c:	ff cf       	rjmp	.-2      	; 0x16c <__stop_program>
